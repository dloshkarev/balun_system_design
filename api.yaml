openapi: 3.0.4
info:
  title: Traver Hunt - OpenAPI 3.0
  version: 0.0.1
tags:
  - name: users
    description: Users operations
  - name: post
    description: Post operations
  - name: feed
    description: Post feed operations
  - name: comment
    description: Post comments operations
paths:
  /api/v1/user/subscribe/{userID}:
    post:
      tags:
        - users
      summary: Subscribe current user to another user
      description: Subscribe current user to another user
      parameters:
        - name: userID
          in: path
          description: author ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - travel_hunt_auth:
            - write:post
  /api/v1/post/photo/{userID}:
    post:
      tags:
        - post
      summary: Upload new photo
      description: Upload new photo
      parameters:
        - name: userID
          in: path
          description: author ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Upload new photo
        content:
          image/jpeg: {}
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoUploadResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - travel_hunt_auth:
            - write:post
  /api/v1/post:
    post:
      tags:
        - post
      summary: Add a new post
      description: Add a new post to user feed
      requestBody:
        description: Create a new post in user feed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - travel_hunt_auth:
            - write:post
  /api/v1/post/reaction:
    post:
      tags:
        - post
      summary: Add a new post reaction
      description: Add a new post reaction
      requestBody:
        description: Add a new post reaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReactionRequest'
        required: true
      responses:
        '200':
          description: Successful operation
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - travel_hunt_auth:
            - write:post
    put:
      tags:
        - post
      summary: Edit post
      description: Edit user post
      requestBody:
        description: Edit user post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdateRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - travel_hunt_auth:
            - write:post
  /api/v1/post/{postID}:
    get:
      tags:
        - post
      summary: Read single post
      description: Read single post
      parameters:
        - name: postID
          in: path
          description: ID of post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
  /api/v1/post/feed/{userID}:
    get:
      tags:
        - feed
      summary: User posts feed
      description: User posts feed
      parameters:
        - name: userID
          in: path
          description: author ID
          required: true
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          description: offset
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
  /api/v1/post/search:
    get:
      tags:
        - feed
      summary: Searching posts by geo
      description: Searching posts by geo
      parameters:
        - name: offset
          in: query
          description: offset for posts
          schema:
            type: integer
            format: int32
        - name: latitude
          in: query
          description: latitude
          schema:
            type: integer
            format: int32
        - name: longitude
          in: query
          description: longitude
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
  /api/v1/comment/{postID}:
    post:
      tags:
        - comment
      summary: Add new comment for post
      description: Add new comment for post
      parameters:
        - name: postID
          in: path
          description: post ID for commenting
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Upload new photo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
      responses:
        '200':
          description: Successful operation
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - travel_hunt_auth:
            - write:post
  /api/v1/comments/{postID}:
    get:
      tags:
        - comment
      summary: Get post comments
      description: Get post comments
      parameters:
        - name: postID
          in: path
          description: post ID
          required: true
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          description: offset for comments
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    PostReaction:
      type: object
      properties:
        type:
          type: string
          example: like
        reactionsCount:
          type: integer
          format: int64
          example: 10
    PostCreateRequest:
      required:
        - body
        - latitude
        - longitude
      type: object
      properties:
        body:
          type: string
          example: some long text for post body
        latitude:
          type: integer
          format: int64
          example: latitude of post event
        longitude:
          type: integer
          format: int64
          example: longitude of post event
        imageCDNNames:
          type: array
          items:
            type: string
          example: [b112ea39-2734-4ed3-92d4-06d637b3afa6.jpg, 713bd918-6d24-47e6-a353-ded0f809b90a.jpg]
    PostUpdateRequest:
      required:
        - body
        - latitude
        - longitude
      type: object
      properties:
        body:
          type: string
          example: some long text for post body
        latitude:
          type: integer
          format: int64
          example: latitude of post event
        longitude:
          type: integer
          format: int64
          example: longitude of post event
        imageCDNNames:
          type: array
          items:
            type: string
          example: [b112ea39-2734-4ed3-92d4-06d637b3afa6.jpg, 713bd918-6d24-47e6-a353-ded0f809b90a.jpg]
    PostResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: post ID
        userID:
          type: integer
          format: int64
          example: author ID
        body:
          type: string
          description: post text body
          example: some long text for post body
        latitude:
          type: integer
          format: int64
          example: latitude of post event
        longitude:
          type: integer
          format: int64
          example: longitude of post event
        imageCDNNames:
          type: array
          description: list of photo names on CDN
          items:
            type: string
          example: [b112ea39-2734-4ed3-92d4-06d637b3afa6.jpg, 713bd918-6d24-47e6-a353-ded0f809b90a.jpg]
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/PostReaction'
        commentsCount:
          type: integer
          format: int64
          description: count of post comments
          example: 15
    CommentRequest:
      type: object
      properties:
        postID:
          type: integer
          format: int64
          example: post ID
        text:
          type: string
          description: comment text body
          example: some long text for comment
    PostReactionRequest:
      type: object
      properties:
        postID:
          type: integer
          format: int64
          example: post ID
        type:
          type: string
          description: reaction type
          example: like
    Comment:
      type: object
      properties:
        userID:
          type: integer
          format: int64
          example: user ID
        postID:
          type: integer
          format: int64
          example: post ID
        text:
          type: string
          description: comment text body
          example: some long text for comment
    CommentResponse:
      type: array
      items:
        $ref: '#/components/schemas/Comment'
    FeedResponse:
      type: array
      items:
        $ref: '#/components/schemas/PostResponse'
    PhotoUploadResponse:
      type: object
      properties:
        cdnName:
          type: string
          description: photo name in CDN
          example: b112ea39-2734-4ed3-92d4-06d637b3afa6.jpg
  securitySchemes:
    travel_hunt_auth:
      type: http
      "scheme": "bearer"
      "bearerFormat": "JWT"
